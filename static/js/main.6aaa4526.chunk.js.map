{"version":3,"sources":["felix.png","loading.gif","../node_modules/web3-eth-accounts/src sync","serviceWorker.js","DeviceContext.js","constants.js","Web3Context.js","styles.js","Admin.js","App.js","Chooser.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Boolean","window","location","hostname","match","DeviceContext","React","createContext","DeviceProvider","children","useState","fingerPrint","setFingerPrint","admin","setAdmin","useEffect","requestIdleCallback","Fingerprint2","get","components","values","map","component","value","murmur","x64hash128","join","setTimeout","Provider","qr","search","split","isOwned","address","Web3Context","blockPoint","Meowbject","networks","provider","Web3","providers","HttpProvider","web3","meowb","eth","Contract","abi","meow","initialState","fetcher","response","status","ownership","owner","tributes","log","reducer","state","action","type","what","JSON","stringify","Web3Provider","useReducer","dispatch","deviceAddress","setDeviceAddress","useContext","console","a","hashedFP","utils","keccak256","methods","checkAccount","call","account","net","getId","getAccounts","gAddress","addAccount","send","from","newAddress","accounts","create","addA","encodedABI","encodeABI","tx","to","gas","data","signTransaction","privateKey","signedT","sendSignedTransaction","rawTransaction","checkOwner","getTributes","claimQR","events","MeowError","returnValues","addQR","shape","color","QRID","MeowObjectAddedID","_id","message","AdminTag","styled","div","FetchStatus","Bottom","Owntainer","Loadtainer","Owner","Button","button","LogtainerTitle","Logtainer","FormContainer","InputField","input","img","host","Admin","name","useRef","setImg","setQR","makeQR","text","opts","errorCorrectionLevel","light","width","rendererOpts","quality","QRCode","toDataURL","drawQR","canvas","document","getElementById","qrImg","Image","feliximg","ctx","getContext","clearRect","height","src","onload","drawImage","felix","style","position","top","onClick","textAlign","ref","placeholder","nvalue","current","svalue","cvalue","disabled","display","margin","maxWidth","boxShadow","loading","maxHeight","fontSize","textDecoration","href","overflowWrap","App","thereIsQR","three","getColor","scene","THREE","halfHeight","innerHeight","camera","innerWidth","renderer","alpha","setSize","setClearColor","appendChild","domElement","geometry","material","emissive","shininess","specular","cube","add","spotLight","set","z","animate","requestAnimationFrame","rotation","x","y","render","querySelector","remove","cancelAnimationFrame","lineHeight","padding","l","i","key","borderBottom","Chooser","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6aaa4526.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/felix.462b44ea.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.77583f10.gif\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 327;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Fingerprint2 from \"fingerprintjs2\";\r\nexport const DeviceContext = React.createContext();\r\n\r\nconst DeviceProvider = ({ children }) => {\r\n  const [fingerPrint, setFingerPrint] = useState(\"crabmeepo\");\r\n  const [admin, setAdmin] = useState(false);\r\n  useEffect(() => {\r\n    const getFingerPrint = () => {\r\n      if (window.requestIdleCallback) {\r\n        requestIdleCallback(function() {\r\n          Fingerprint2.get(function(components) {\r\n            var values = components.map(function(component) {\r\n              return component.value;\r\n            });\r\n            var murmur = Fingerprint2.x64hash128(values.join(\"\"), 31);\r\n            setFingerPrint(murmur);\r\n          });\r\n        });\r\n      } else {\r\n        setTimeout(function() {\r\n          Fingerprint2.get(function(components) {\r\n            var values = components.map(function(component) {\r\n              return component.value;\r\n            });\r\n            var murmur = Fingerprint2.x64hash128(values.join(\"\"), 31);\r\n            setFingerPrint(murmur);\r\n          });\r\n        }, 500);\r\n      }\r\n    };\r\n    getFingerPrint();\r\n  }, []);\r\n\r\n  return (\r\n    <DeviceContext.Provider value={{ fingerPrint, admin, setAdmin }}>\r\n      {children}\r\n    </DeviceContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DeviceProvider;\r\n","\r\nconst qr = window.location.search ? window.location.search.split('?')[1].split(\"-\") : [1, \"null_object\"];\r\nexport const GANACHE_ID = 1569465605456;\r\nexport const KALE_ID = 1158070613;\r\nexport const isOwned = address =>\r\n    address === \"0x0000000000000000000000000000000000000000\" ? false : true;\r\nexport const getQR = () => qr[1];\r\nexport const getID = () => qr[0];\r\n","import React, { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport Meowbject from \"./contracts/Meowbject\";\r\nimport { DeviceContext } from \"./DeviceContext\";\r\nimport { GANACHE_ID, getID, KALE_ID } from \"./constants\";\r\n\r\nexport const Web3Context = React.createContext();\r\n\r\nconst KALE_A = \"u1qhdnj7go\";\r\nconst KALE_B = \"c2uiuaT6hOXr545x90ghGWiuwFC_rLhCTlV0wacrO-k\";\r\nconst RPC = \"u1wxxj5g51-u1ghyojs49-rpc.us1-azure.kaleido.io\";\r\nconst KWS = \"u1wxxj5g51-u1ghyojs49-wss.us1-azure.kaleido.io\";\r\n// const blockPoint = \"http://localhost:8545\";\r\n// const wssBP = \"ws://localhost:8545\";\r\nconst blockPoint = `https://${KALE_A}:${KALE_B}@${RPC}`;\r\n\r\n// const address = \"0x64051eB06dC09432944012bB3Ac92E5107e48bBe\";\r\n\r\n//const address = Meowbject.networks[GANACHE_ID].address;\r\nconst address = Meowbject.networks[KALE_ID].address;\r\nconst provider = new Web3.providers.HttpProvider(blockPoint);\r\nconst web3 = new Web3(provider);\r\nconst meowb = new web3.eth.Contract(Meowbject.abi, address);\r\n\r\n// action types\r\nconst FETCHING = \"FETCHING\";\r\nconst SUCCESS = \"SUCCESS\";\r\nconst ERROR = \"ERROR\";\r\nconst OWNER = \"OWNER\";\r\nconst TRIBUTES = \"TRIBUTES\";\r\nconst PRINT_QR = \"PRINT_QR\";\r\nwindow.web3 = web3;\r\nwindow.meow = meowb;\r\nconst initialState = {\r\n  fetcher: { response: null, status: null },\r\n  ownership: { owner: null },\r\n  tributes: { tributes: null },\r\n  qr: null,\r\n  log: []\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  const { response, type, owner, tributes, what } = action;\r\n  switch (type) {\r\n    case FETCHING:\r\n      return {\r\n        ...state,\r\n        fetcher: { status: FETCHING },\r\n        log: [...state.log, `FETCHING > ${what}`]\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetcher: { status: SUCCESS, response },\r\n        log: [...state.log, `SUCCESS: ${what} > ${JSON.stringify(response)}`]\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        fetcher: { status: ERROR, response },\r\n        log: [...state.log, `ERROR: ${what} > ${JSON.stringify(response)}`]\r\n      };\r\n    case OWNER:\r\n      return { ...state, ownership: { owner } };\r\n    case TRIBUTES: {\r\n      return { ...state, tributes: { tributes } };\r\n    }\r\n    case PRINT_QR: {\r\n      return { ...state, qr: response };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Web3Provider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [deviceAddress, setDeviceAddress] = useState();\r\n  const { fingerPrint } = useContext(DeviceContext);\r\n\r\n  useEffect(() => {\r\n    console.log(fingerPrint);\r\n    if (fingerPrint) {\r\n      const checkAccount = async () => {\r\n        const hashedFP = web3.utils.keccak256(fingerPrint);\r\n        dispatch({ type: FETCHING, what: \"DEVICE_ADDRESS\" });\r\n        const account = await meowb.methods.checkAccount(hashedFP).call();\r\n        setDeviceAddress(account);\r\n        if (account === \"0x0000000000000000000000000000000000000000\") {\r\n          if ((await web3.eth.net.getId()) === GANACHE_ID) {\r\n            const gAddress = await web3.eth.getAccounts();\r\n            await meowb.methods\r\n              .addAccount(hashedFP, gAddress[0])\r\n              .send({ from: gAddress[0] });\r\n            setDeviceAddress(gAddress);\r\n          } else {\r\n            dispatch({ type: FETCHING, what: \"CREATING NEW DEVICE ADDRESS\" });\r\n            const newAddress = web3.eth.accounts.create();\r\n            setDeviceAddress(newAddress);\r\n            const addA = await meowb.methods.addAccount(\r\n              hashedFP,\r\n              newAddress.address\r\n            );\r\n\r\n            // FOR GANACHE TESTING\r\n            const encodedABI = addA.encodeABI();\r\n            const tx = {\r\n              from: newAddress.address,\r\n              to: address,\r\n              gas: 2000000,\r\n              data: encodedABI\r\n            };\r\n            const signedT = await web3.eth.accounts.signTransaction(\r\n              tx,\r\n              newAddress.privateKey\r\n            );\r\n            await web3.eth.sendSignedTransaction(signedT.rawTransaction);\r\n            dispatch({\r\n              type: SUCCESS,\r\n              response: newAddress.address,\r\n              what: \"NEW DEVICE ADDRESS\"\r\n            });\r\n            // .send({ from: newAddress.address });\r\n          }\r\n        } else {\r\n          dispatch({\r\n            type: SUCCESS,\r\n            response: account,\r\n            what: \"DEVICE_ADDRESS\"\r\n          });\r\n          setDeviceAddress(account);\r\n        }\r\n      };\r\n      checkAccount();\r\n    }\r\n  }, [fingerPrint]);\r\n\r\n  const checkOwner = async qr => {\r\n    dispatch({ type: FETCHING, what: \"OWNER\" });\r\n    try {\r\n      const response = await meowb.methods.checkOwner(qr).call();\r\n      dispatch({ type: SUCCESS, response, what: \"OWNER\" });\r\n      dispatch({ type: OWNER, owner: response });\r\n      getTributes();\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, response: error, what: \"OWNER\" });\r\n    }\r\n  };\r\n\r\n  const claimQR = async qr => {\r\n    dispatch({ type: FETCHING, what: \"QRCLAIM\" });\r\n    try {\r\n      const account = await web3.eth.getAccounts();\r\n      const response = await meowb.methods\r\n        .claimQR(qr[0], qr[1], deviceAddress)\r\n        .send({ from: account[0] });\r\n\r\n      if (response.events.MeowError) {\r\n        dispatch({\r\n          type: ERROR,\r\n          response: response.events.MeowError.returnValues[0],\r\n          what: \"QRCLAIM\"\r\n        });\r\n      } else {\r\n        dispatch({ type: SUCCESS, response: response, what: \"QRCLAIM\" });\r\n        dispatch({ type: OWNER, owner: deviceAddress });\r\n      }\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ERROR,\r\n        response: \"this code is already claimed or does not exist\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const addQR = async (qr, shape, color) => {\r\n    dispatch({ type: FETCHING, what: \"QRADD\" });\r\n    dispatch({ type: PRINT_QR, response: null });\r\n\r\n    try {\r\n      const account = await web3.eth.getAccounts();\r\n      const response = await meowb.methods\r\n        .addQR(qr, shape, color)\r\n        .send({ from: account[0], gas: 3000000 });\r\n      dispatch({ type: SUCCESS, response: response, what: \"QRADD\" });\r\n      const QRID = response.events.MeowObjectAddedID.returnValues[0];\r\n      dispatch({ type: \"PRINT_QR\", response: `${QRID}-${qr}` });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ERROR,\r\n        response: \"something went wrong, this QR probably already exists\",\r\n        what: \"QRADD\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const getTributes = async () => {\r\n    dispatch({ type: FETCHING, what: \"ATTRIBUTES\" });\r\n    const _id = getID();\r\n    try {\r\n      const tributes = await meowb.methods.getTributes(_id).call();\r\n      dispatch({ type: SUCCESS, response: tributes, what: \"ATTRIBUTES\" });\r\n      dispatch({ type: TRIBUTES, tributes });\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, response: error.message });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Web3Context.Provider\r\n      value={{ state, dispatch, checkOwner, claimQR, addQR }}\r\n    >\r\n      {children}\r\n    </Web3Context.Provider>\r\n  );\r\n};\r\n\r\nexport default Web3Provider;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AdminTag = styled.div`\r\n  height: 3rem;\r\n  position: absolute;\r\n  background: red;\r\n  line-height: 3.4rem;\r\n  padding: 0rem 0.5rem 0rem 0.6rem;\r\n  font-size: 0.9rem;\r\n  border-radius: 0rem 1.8rem 0 0;\r\n  font-weight: 800;\r\n  box-shadow: 7px 8px black;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  cursor: pointer;\r\n  width: 5rem;\r\n`;\r\n\r\nexport const FetchStatus = styled.div`\r\n  color: white;\r\n  font-family: monospace;\r\n  font-weight: bold;\r\n  background: black;\r\n  width: 100%;\r\n  text-align: center;\r\n  height: 2rem;\r\n  font-size: 1.6rem;\r\n  line-height: 2rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const Bottom = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Owntainer = styled.div`\r\n  text-align: center;\r\n  font-size: 1.4rem;\r\n  border: 1px black solid;\r\n  width: 82%;\r\n  padding: 1rem;\r\n  margin: auto;\r\n  box-shadow: 8px 6px black;\r\n  margin-top: 1.5rem;\r\n  max-width: 33rem;\r\n`;\r\n\r\nexport const Loadtainer = styled(Owntainer)`\r\n  height: 100vh;\r\n  line-height: 100vh;\r\n  font-size: 4rem;\r\n`;\r\n\r\nexport const Owner = styled.div`\r\n  font-size: 1rem;\r\n  width: 80%;\r\n  overflow-wrap: break-word;\r\n  text-align: center;\r\n  margin: auto;\r\n  padding-top: 0.8rem;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background: white;\r\n  color: black;\r\n  font-family: monospace;\r\n  display: block;\r\n  width: 9rem;\r\n  font-size: 2rem;\r\n  height: 4rem;\r\n  margin-top: 3rem;\r\n  margin: auto;\r\n  margin-top: 1.1rem;\r\n  border: 3px black solid;\r\n  box-shadow: 7px 5px #f41717;\r\n`;\r\n\r\nexport const LogtainerTitle = styled.div`\r\n  width: 3rem;\r\n  border-bottom: 1px solid white;\r\n  line-height: 1.6rem;\r\n  margin-bottom: 0.4rem;\r\n`;\r\nexport const Logtainer = styled.div`\r\n  margin: 2rem 3rem 1rem 1.1rem;\r\n  font-size: 0.7rem;\r\n  background: black;\r\n  color: #8e8ee3;\r\n  padding: 0.6rem;\r\n  box-shadow: 7px 7px #8e8ee3;\r\n  @media (max-width: 500px) {\r\n    width: 85%;\r\n  }\r\n`;\r\n\r\nexport const FormContainer = styled.div`\r\n  border: 2px black solid;\r\n  text-align: center;\r\n  max-width: 21rem;\r\n  margin: 2rem auto;\r\n  padding: 0px 0rem 2rem;\r\n  box-shadow: 12px 9px black;\r\n`;\r\n\r\nexport const InputField = styled.input`\r\n  width: 13rem;\r\n  border-color: black;\r\n  height: 2rem;\r\n  font-size: 1rem;\r\n  padding: 0.5rem;\r\n  margin: 1rem 0rem;\r\n`;\r\n\r\nexport const QR = styled.img`\r\n  margin: auto;\r\n  width: 50%;\r\n  max-width: 21rem;\r\n  display: block;\r\n  box-shadow: 12px 18px black;\r\n`;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AdminTag, FormContainer, InputField, Button, QR } from \"./styles\";\r\nimport { DeviceContext } from \"./DeviceContext\";\r\nimport { Web3Context } from \"./Web3Context\";\r\nimport QRCode from \"qrcode\";\r\nimport felix from \"./felix.png\";\r\nimport loading from \"./loading.gif\";\r\nconst host =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:3000\"\r\n    : \"https://meowbjects.com\";\r\n\r\nconst Admin = () => {\r\n  const { setAdmin } = useContext(DeviceContext);\r\n  const { addQR, state } = useContext(Web3Context);\r\n  const name = useRef();\r\n  const shape = useRef();\r\n  const color = useRef();\r\n\r\n  const [img, setImg] = useState();\r\n\r\n  const [qr, setQR] = useState();\r\n\r\n  const sendQR = () => {\r\n    const { value: nvalue } = name.current;\r\n    const { value: svalue } = shape.current;\r\n    const { value: cvalue } = color.current;\r\n    addQR(nvalue, svalue, cvalue);\r\n  };\r\n  const makeQR = async text => {\r\n    var opts = {\r\n      errorCorrectionLevel: \"H\",\r\n      type: \"image/jpeg\",\r\n      color: { light: \"#ff4500\" },\r\n      width: 400,\r\n      rendererOpts: {\r\n        quality: 1\r\n      }\r\n    };\r\n    const qr = await QRCode.toDataURL(text, opts);\r\n    setQR(qr);\r\n    return qr;\r\n  };\r\n\r\n  const drawQR = async () => {\r\n    const qr = await makeQR(`${host}/?${state.qr}`);\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const qrImg = new Image();\r\n    const feliximg = new Image();\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    qrImg.src = qr;\r\n    qrImg.onload = () => {\r\n      ctx.drawImage(qrImg, 0, 0, 500, 500);\r\n      feliximg.src = felix;\r\n      feliximg.onload = function() {\r\n        ctx.drawImage(feliximg, 200, 200, 100, 100);\r\n        setImg(canvas.toDataURL());\r\n      };\r\n    };\r\n  };\r\n  useEffect(() => {\r\n    if (!state.qr) {\r\n      setQR(null);\r\n      return;\r\n    }\r\n    drawQR();\r\n  }, [state.qr]);\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <div style={{ position: \"sticky\", top: \"10rem\" }}>\r\n        <AdminTag onClick={() => setAdmin(false)}>no admin?</AdminTag>\r\n      </div>\r\n      <FormContainer style={{ textAlign: \"center\" }}>\r\n        <h1>add one</h1>\r\n        <InputField ref={name} placeholder=\"name\" />\r\n        <InputField ref={shape} placeholder=\"shape\" />\r\n        <InputField ref={color} placeholder=\"color\" />\r\n        <Button onClick={sendQR} disabled={state.fetcher.status === \"FETCHING\"}>\r\n          {state.fetcher.status === \"FETCHING\" ? \"ADDING\" : \"CLICKY\"}\r\n        </Button>\r\n      </FormContainer>\r\n      <img\r\n        style={{\r\n          width: \"80%\",\r\n          display: \"block\",\r\n          margin: \"auto\",\r\n          maxWidth: \"420px\",\r\n          boxShadow: \"12px 15px black\"\r\n        }}\r\n        src={state.fetcher.status === \"FETCHING\" ? loading : img}\r\n      ></img>\r\n      {qr && (\r\n        <canvas\r\n          id=\"canvas\"\r\n          width={\"500px\"}\r\n          height=\"500px\"\r\n          style={{ maxWidth: \"21rem\", maxHeight: \"21rem\", display: \"none\" }}\r\n        ></canvas>\r\n      )}\r\n      {qr && (\r\n        <a\r\n          style={{\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            display: \"block\",\r\n            fontSize: \"30px\",\r\n            textDecoration: \"none\",\r\n            color: \"red\"\r\n          }}\r\n          href={`${host}/?${state.qr}`}\r\n        >\r\n          {state.fetcher.status === \"FETCHING\" ? \"ADDING...\" : \"CLICKY\"}\r\n        </a>\r\n      )}\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          width: \"80%\",\r\n          display: \"block\",\r\n          margin: \"auto\",\r\n          overflowWrap: \"break-word\"\r\n        }}\r\n      >\r\n        {state.fetcher.status} - {JSON.stringify(state.fetcher.response)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React, {\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState\r\n} from \"react\";\r\nimport web3 from \"web3\";\r\nimport { Web3Context } from \"./Web3Context\";\r\nimport { isOwned } from \"./constants\";\r\nimport * as THREE from \"three\";\r\nimport {\r\n  AdminTag,\r\n  Button,\r\n  Bottom,\r\n  Owner,\r\n  Owntainer,\r\n  FetchStatus,\r\n  Loadtainer,\r\n  Logtainer,\r\n  LogtainerTitle\r\n} from \"./styles\";\r\nimport { DeviceContext } from \"./DeviceContext\";\r\n\r\nfunction App() {\r\n  const { checkOwner, claimQR, state } = useContext(Web3Context);\r\n  const { setAdmin } = useContext(DeviceContext);\r\n  const qr = window.location.search\r\n    ? window.location.search.split(\"?\")[1].split(\"-\")\r\n    : [1, \"null_object\"];\r\n  const thereIsQR = qr[0] !== \"\" ? true : false;\r\n  const color = useRef();\r\n  const three = useRef();\r\n  useEffect(() => {\r\n    if (!state.tributes.tributes) return;\r\n    color.current = state.tributes.tributes.color;\r\n  }, [state.tributes]);\r\n  const getColor = () => color.current;\r\n  useEffect(() => {\r\n    console.log(thereIsQR);\r\n    if (thereIsQR) checkOwner(web3.utils.keccak256(qr[1]));\r\n    return () => {};\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!thereIsQR) return;\r\n    if (!state.tributes.tributes) return;\r\n    const scene = new THREE.Scene();\r\n    console.log(\"THREE\");\r\n    const halfHeight = window.innerHeight / 2;\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      (window.innerWidth * 0.8) / halfHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\r\n    renderer.setSize(window.innerWidth * 0.8, halfHeight);\r\n    renderer.setClearColor(0xffffff, 0);\r\n    console.log(three.current);\r\n    three.current.appendChild(renderer.domElement);\r\n\r\n    const { shape } = state.tributes.tributes;\r\n    let geometry;\r\n    if (shape === \"sphere\") {\r\n      geometry = new THREE.SphereGeometry(1, 32, 32);\r\n    } else if (shape === \"cube\") {\r\n      geometry = new THREE.BoxGeometry(1, 1, 1);\r\n    } else if (shape === \"torus\") {\r\n      geometry = new THREE.TorusGeometry(1, 0.1, 16, 100);\r\n    } else {\r\n      geometry = new THREE.TorusKnotGeometry(1, 0.3, 20, 16);\r\n    }\r\n    const material = new THREE.MeshPhongMaterial({\r\n      color: \"red\",\r\n      emissive: 0x2a0000,\r\n\r\n      shininess: 10,\r\n      specular: 0xffffff\r\n    });\r\n\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    scene.add(cube);\r\n    var spotLight = new THREE.SpotLight(0xffffff);\r\n    spotLight.position.set(1.25, 1.25, 1.25);\r\n    scene.add(spotLight);\r\n\r\n    var light = new THREE.AmbientLight(0x404040, 4); // soft white light\r\n    scene.add(light);\r\n    let req;\r\n    camera.position.z = 5;\r\n    function animate() {\r\n      req = requestAnimationFrame(animate);\r\n      material.color = new THREE.Color(getColor());\r\n      cube.rotation.x += 0.01;\r\n      cube.rotation.y += 0.01;\r\n\r\n      renderer.render(scene, camera);\r\n    }\r\n    animate();\r\n\r\n    return () => {\r\n      document.querySelector(\"canvas\").remove();\r\n      window.cancelAnimationFrame(req);\r\n    };\r\n  }, [state.tributes]);\r\n  const {\r\n    ownership: { owner },\r\n    fetcher: { status, response },\r\n    log,\r\n    tributes\r\n  } = state;\r\n  if (!thereIsQR) return <div>nothing to see here</div>;\r\n  return (\r\n    <div>\r\n      <div style={{ position: \"sticky\", top: \"10rem\" }}>\r\n        <AdminTag onClick={() => setAdmin(true)}>admin?</AdminTag>\r\n      </div>\r\n      <FetchStatus>{status}</FetchStatus>\r\n      {!tributes.tributes && <Loadtainer>LOADING</Loadtainer>}\r\n      <div id=\"three\" ref={three}></div>\r\n      <Bottom>\r\n        {qr[1] === \"null_object\" && (\r\n          <Owntainer>This is not a valid URL</Owntainer>\r\n        )}\r\n        {isOwned(owner) ? (\r\n          <Owntainer style={{ textAlign: \"center\", fontSize: \"1.4rem\" }}>\r\n            <div>claimed by:</div> <Owner>{owner}</Owner>\r\n          </Owntainer>\r\n        ) : (\r\n          <Owntainer>\r\n            <div\r\n              style={{\r\n                textDecoration: \"underline\",\r\n                lineHeight: \"3rem\"\r\n              }}\r\n            >\r\n              hello friend!\r\n            </div>\r\n            {status !== \"FETCHING\" ? (\r\n              <div>\r\n                <div>would you like to claim this meowbject?</div>\r\n                <Button onClick={() => claimQR(qr)}>claim</Button>\r\n              </div>\r\n            ) : (\r\n              <div>CLAIMING...</div>\r\n            )}\r\n            {status === \"ERROR\" && (\r\n              <div style={{ padding: \"2rem\", color: \"red\" }}>{response}</div>\r\n            )}\r\n          </Owntainer>\r\n        )}\r\n        <Logtainer>\r\n          <LogtainerTitle>DEV_LOG</LogtainerTitle>\r\n          {log.map((l, i) => (\r\n            <div\r\n              key={l + i}\r\n              style={{\r\n                borderBottom: \"1px white solid\",\r\n                padding: \"1rem 0rem 1rem 0rem\",\r\n                overflowWrap: \"break-word\"\r\n              }}\r\n            >\r\n              {l}\r\n            </div>\r\n          ))}\r\n        </Logtainer>\r\n      </Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport Admin from \"./Admin\";\r\nimport App from \"./App\";\r\nimport { DeviceContext } from \"./DeviceContext\";\r\n\r\nconst Chooser = () => {\r\n  const { admin } = useContext(DeviceContext);\r\n  return <Fragment>{admin ? <Admin /> : <App />}</Fragment>;\r\n};\r\n\r\nexport default Chooser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport DeviceProvider from \"./DeviceContext\";\r\nimport Web3Provider from \"./Web3Context\";\r\nimport Chooser from \"./Chooser\";\r\n\r\nReactDOM.render(\r\n  <DeviceProvider>\r\n    <Web3Provider>\r\n      <Chooser />\r\n    </Web3Provider>\r\n  </DeviceProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}