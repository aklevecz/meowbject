{"version":3,"sources":["felix.png","../node_modules/web3-eth-accounts/src sync","DeviceContext.js","constants.js","Web3Context.js","styles.js","App.js","serviceWorker.js","Admin.js","Chooser.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","DeviceContext","React","createContext","DeviceProvider","children","useState","fingerPrint","setFingerPrint","admin","setAdmin","useEffect","window","requestIdleCallback","Fingerprint2","get","components","values","map","component","value","murmur","x64hash128","join","setTimeout","Provider","qr","location","search","split","isOwned","address","Web3Context","blockPoint","Meowbject","networks","console","log","provider","Web3","providers","HttpProvider","web3","meowb","eth","Contract","abi","meow","initialState","fetcher","response","status","ownership","owner","tributes","reducer","state","action","type","what","JSON","stringify","Web3Provider","useReducer","dispatch","deviceAddress","setDeviceAddress","useContext","a","hashedFP","utils","keccak256","methods","checkAccount","call","account","net","getId","getAccounts","gAddress","addAccount","send","from","newAddress","accounts","create","addA","encodedABI","encodeABI","tx","to","gas","data","signTransaction","privateKey","signedT","sendSignedTransaction","rawTransaction","checkOwner","getTributes","claimQR","events","MeowError","returnValues","message","addQR","shape","color","QRID","MeowObjectAddedID","_id","AdminTag","styled","div","FetchStatus","Bottom","Owntainer","Loadtainer","Owner","Button","button","LogtainerTitle","Logtainer","FormContainer","InputField","input","img","App","thereIsQR","useRef","three","current","getColor","scene","THREE","halfHeight","innerHeight","camera","innerWidth","renderer","alpha","setSize","setClearColor","appendChild","domElement","geometry","material","emissive","shininess","specular","cube","add","spotLight","position","set","light","z","animate","requestAnimationFrame","rotation","x","y","render","document","querySelector","remove","cancelAnimationFrame","style","top","onClick","ref","textAlign","fontSize","textDecoration","lineHeight","padding","l","i","key","borderBottom","overflowWrap","Boolean","hostname","match","host","Admin","name","setQR","makeQR","text","opts","errorCorrectionLevel","width","rendererOpts","quality","QRCode","toDataURL","drawQR","canvas","getElementById","qrImg","Image","feliximg","ctx","getContext","src","onload","drawImage","felix","height","placeholder","nvalue","svalue","cvalue","disabled","maxWidth","maxHeight","margin","display","href","Chooser","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c96ba8bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/felix.462b44ea.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 325;","import React, { useEffect, useState } from \"react\";\r\nimport Fingerprint2 from \"fingerprintjs2\";\r\nexport const DeviceContext = React.createContext();\r\n\r\nconst DeviceProvider = ({ children }) => {\r\n  const [fingerPrint, setFingerPrint] = useState(\"crabmeepo\");\r\n  const [admin, setAdmin] = useState(false);\r\n  useEffect(() => {\r\n    const getFingerPrint = () => {\r\n      if (window.requestIdleCallback) {\r\n        requestIdleCallback(function() {\r\n          Fingerprint2.get(function(components) {\r\n            var values = components.map(function(component) {\r\n              return component.value;\r\n            });\r\n            var murmur = Fingerprint2.x64hash128(values.join(\"\"), 31);\r\n            setFingerPrint(murmur);\r\n          });\r\n        });\r\n      } else {\r\n        setTimeout(function() {\r\n          Fingerprint2.get(function(components) {\r\n            var values = components.map(function(component) {\r\n              return component.value;\r\n            });\r\n            var murmur = Fingerprint2.x64hash128(values.join(\"\"), 31);\r\n            setFingerPrint(murmur);\r\n          });\r\n        }, 500);\r\n      }\r\n    };\r\n    getFingerPrint();\r\n  }, []);\r\n\r\n  return (\r\n    <DeviceContext.Provider value={{ fingerPrint, admin, setAdmin }}>\r\n      {children}\r\n    </DeviceContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DeviceProvider;\r\n","\r\nconst qr = window.location.search ? window.location.search.split('?')[1].split(\"-\") : [1, \"null_object\"];\r\nexport const GANACHE_ID = 1569465605456;\r\nexport const KALE_ID = 1158070613;\r\nexport const isOwned = address =>\r\n    address === \"0x0000000000000000000000000000000000000000\" ? false : true;\r\nexport const getQR = () => qr[1];\r\nexport const getID = () => qr[0];\r\n","import React, { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport Meowbject from \"./contracts/Meowbject\";\r\nimport { DeviceContext } from \"./DeviceContext\";\r\nimport { GANACHE_ID, getQR, getID, KALE_ID } from \"./constants\";\r\n\r\nexport const Web3Context = React.createContext();\r\n\r\nconst KALE_A = \"u1qhdnj7go\";\r\nconst KALE_B = \"c2uiuaT6hOXr545x90ghGWiuwFC_rLhCTlV0wacrO-k\";\r\nconst RPC = \"u1wxxj5g51-u1ghyojs49-rpc.us1-azure.kaleido.io\";\r\nconst KWS = \"u1wxxj5g51-u1ghyojs49-wss.us1-azure.kaleido.io\";\r\n// const blockPoint = \"http://localhost:8545\";\r\n// const wssBP = \"ws://localhost:8545\";\r\nconst blockPoint = `https://${KALE_A}:${KALE_B}@${RPC}`;\r\n\r\n// const address = \"0x64051eB06dC09432944012bB3Ac92E5107e48bBe\";\r\n\r\n//const address = Meowbject.networks[GANACHE_ID].address;\r\nconst address = Meowbject.networks[KALE_ID].address;\r\nconsole.log(\"contract address\", address);\r\nconst provider = new Web3.providers.HttpProvider(blockPoint);\r\nconst web3 = new Web3(provider);\r\nconst meowb = new web3.eth.Contract(Meowbject.abi, address);\r\n\r\n// action types\r\nconst FETCHING = \"FETCHING\";\r\nconst SUCCESS = \"SUCCESS\";\r\nconst ERROR = \"ERROR\";\r\nconst OWNER = \"OWNER\";\r\nconst TRIBUTES = \"TRIBUTES\";\r\nconst PRINT_QR = \"PRINT_QR\";\r\nwindow.web3 = web3;\r\nwindow.meow = meowb;\r\nconst initialState = {\r\n  fetcher: { response: null, status: null },\r\n  ownership: { owner: null },\r\n  tributes: { tributes: null },\r\n  qr: null,\r\n  log: []\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  const { response, type, owner, tributes, what } = action;\r\n  switch (type) {\r\n    case FETCHING:\r\n      return {\r\n        ...state,\r\n        fetcher: { status: FETCHING },\r\n        log: [...state.log, `FETCHING > ${what}`]\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetcher: { status: SUCCESS, response },\r\n        log: [...state.log, `SUCCESS: ${what} > ${JSON.stringify(response)}`]\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        fetcher: { status: ERROR, response },\r\n        log: [...state.log, `ERROR: ${what} > ${JSON.stringify(response)}`]\r\n      };\r\n    case OWNER:\r\n      return { ...state, ownership: { owner } };\r\n    case TRIBUTES: {\r\n      return { ...state, tributes: { tributes } };\r\n    }\r\n    case PRINT_QR: {\r\n      console.log(response);\r\n      return { ...state, qr: response };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Web3Provider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [deviceAddress, setDeviceAddress] = useState();\r\n  const { fingerPrint } = useContext(DeviceContext);\r\n\r\n  useEffect(() => {\r\n    console.log(fingerPrint);\r\n    if (fingerPrint) {\r\n      const checkAccount = async () => {\r\n        const hashedFP = web3.utils.keccak256(fingerPrint);\r\n        dispatch({ type: FETCHING, what: \"DEVICE_ADDRESS\" });\r\n        const account = await meowb.methods.checkAccount(hashedFP).call();\r\n        setDeviceAddress(account);\r\n        if (account === \"0x0000000000000000000000000000000000000000\") {\r\n          if ((await web3.eth.net.getId()) === GANACHE_ID) {\r\n            const gAddress = await web3.eth.getAccounts();\r\n            await meowb.methods\r\n              .addAccount(hashedFP, gAddress[0])\r\n              .send({ from: gAddress[0] });\r\n            setDeviceAddress(gAddress);\r\n          } else {\r\n            dispatch({ type: FETCHING, what: \"CREATING NEW DEVICE ADDRESS\" });\r\n            const newAddress = web3.eth.accounts.create();\r\n            setDeviceAddress(newAddress);\r\n            const addA = await meowb.methods.addAccount(\r\n              hashedFP,\r\n              newAddress.address\r\n            );\r\n\r\n            // FOR GANACHE TESTING\r\n            const encodedABI = addA.encodeABI();\r\n            const tx = {\r\n              from: newAddress.address,\r\n              to: address,\r\n              gas: 2000000,\r\n              data: encodedABI\r\n            };\r\n            const signedT = await web3.eth.accounts.signTransaction(\r\n              tx,\r\n              newAddress.privateKey\r\n            );\r\n            const tranny = await web3.eth.sendSignedTransaction(\r\n              signedT.rawTransaction\r\n            );\r\n            dispatch({\r\n              type: SUCCESS,\r\n              response: newAddress.address,\r\n              what: \"NEW DEVICE ADDRESS\"\r\n            });\r\n            // .send({ from: newAddress.address });\r\n          }\r\n        } else {\r\n          dispatch({\r\n            type: SUCCESS,\r\n            response: account,\r\n            what: \"DEVICE_ADDRESS\"\r\n          });\r\n          setDeviceAddress(account);\r\n        }\r\n      };\r\n      checkAccount();\r\n    }\r\n  }, [fingerPrint]);\r\n\r\n  const checkOwner = async qr => {\r\n    console.log(\"check owner\");\r\n    dispatch({ type: FETCHING, what: \"OWNER\" });\r\n    try {\r\n      const response = await meowb.methods.checkOwner(qr).call();\r\n      dispatch({ type: SUCCESS, response, what: \"OWNER\" });\r\n      dispatch({ type: OWNER, owner: response });\r\n      getTributes();\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, response: error, what: \"OWNER\" });\r\n    }\r\n  };\r\n\r\n  const claimQR = async qr => {\r\n    dispatch({ type: FETCHING, what: \"QRCLAIM\" });\r\n    try {\r\n      const account = await web3.eth.getAccounts();\r\n      const response = await meowb.methods\r\n        .claimQR(qr[0], qr[1], deviceAddress)\r\n        .send({ from: account[0] });\r\n\r\n      if (response.events.MeowError) {\r\n        dispatch({\r\n          type: ERROR,\r\n          response: response.events.MeowError.returnValues[0],\r\n          what: \"QRCLAIM\"\r\n        });\r\n      } else {\r\n        dispatch({ type: SUCCESS, response: response, what: \"QRCLAIM\" });\r\n        dispatch({ type: OWNER, owner: deviceAddress });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      dispatch({\r\n        type: ERROR,\r\n        response: \"this code is already claimed or does not exist\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const addQR = async (qr, shape, color) => {\r\n    dispatch({ type: FETCHING, what: \"QRADD\" });\r\n    dispatch({ type: PRINT_QR, response: null });\r\n\r\n    try {\r\n      console.log(deviceAddress);\r\n      const account = await web3.eth.getAccounts();\r\n      console.log(qr, shape, color);\r\n      const response = await meowb.methods\r\n        .addQR(qr, shape, color)\r\n        .send({ from: account[0], gas: 3000000 });\r\n      dispatch({ type: SUCCESS, response: response, what: \"QRADD\" });\r\n      const QRID = response.events.MeowObjectAddedID.returnValues[0];\r\n      dispatch({ type: \"PRINT_QR\", response: `${QRID}-${qr}` });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ERROR,\r\n        response: \"something went wrong, this QR probably already exists\",\r\n        what: \"QRADD\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const getTributes = async () => {\r\n    dispatch({ type: FETCHING, what: \"ATTRIBUTES\" });\r\n    const _id = getID();\r\n    try {\r\n      const tributes = await meowb.methods.getTributes(_id).call();\r\n      console.log(tributes);\r\n      dispatch({ type: SUCCESS, response: tributes, what: \"ATTRIBUTES\" });\r\n      dispatch({ type: TRIBUTES, tributes });\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, response: error.message });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Web3Context.Provider\r\n      value={{ state, dispatch, checkOwner, claimQR, addQR }}\r\n    >\r\n      {children}\r\n    </Web3Context.Provider>\r\n  );\r\n};\r\n\r\nexport default Web3Provider;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AdminTag = styled.div`\r\n  height: 3rem;\r\n  position: absolute;\r\n  background: red;\r\n  line-height: 3.4rem;\r\n  padding: 0rem 0.5rem 0rem 0.6rem;\r\n  font-size: 0.9rem;\r\n  border-radius: 0rem 1.8rem 0 0;\r\n  font-weight: 800;\r\n  box-shadow: 7px 8px black;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  cursor: pointer;\r\n  width: 5rem;\r\n`;\r\n\r\nexport const FetchStatus = styled.div`\r\n  color: white;\r\n  font-family: monospace;\r\n  font-weight: bold;\r\n  background: black;\r\n  width: 100%;\r\n  text-align: center;\r\n  height: 2rem;\r\n  font-size: 1.6rem;\r\n  line-height: 2rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const Bottom = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Owntainer = styled.div`\r\n  text-align: center;\r\n  font-size: 1.4rem;\r\n  border: 1px black solid;\r\n  width: 82%;\r\n  padding: 1rem;\r\n  margin: auto;\r\n  box-shadow: 8px 6px black;\r\n  margin-top: 1.5rem;\r\n  max-width: 33rem;\r\n`;\r\n\r\nexport const Loadtainer = styled(Owntainer)`\r\n  height: 100vh;\r\n  line-height: 100vh;\r\n  font-size: 4rem;\r\n`;\r\n\r\nexport const Owner = styled.div`\r\n  font-size: 1rem;\r\n  width: 80%;\r\n  overflow-wrap: break-word;\r\n  text-align: center;\r\n  margin: auto;\r\n  padding-top: 0.8rem;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background: white;\r\n  color: black;\r\n  font-family: monospace;\r\n  display: block;\r\n  width: 9rem;\r\n  font-size: 2rem;\r\n  height: 4rem;\r\n  margin-top: 3rem;\r\n  margin: auto;\r\n  margin-top: 1.1rem;\r\n  border: 3px black solid;\r\n  box-shadow: 7px 5px #f41717;\r\n`;\r\n\r\nexport const LogtainerTitle = styled.div`\r\n  width: 3rem;\r\n  border-bottom: 1px solid white;\r\n  line-height: 1.6rem;\r\n  margin-bottom: 0.4rem;\r\n`;\r\nexport const Logtainer = styled.div`\r\n  margin: 2rem 3rem 1rem 1.1rem;\r\n  font-size: 0.7rem;\r\n  background: black;\r\n  color: #8e8ee3;\r\n  padding: 0.6rem;\r\n  box-shadow: 7px 7px #8e8ee3;\r\n  @media (max-width: 500px) {\r\n    width: 85%;\r\n  }\r\n`;\r\n\r\nexport const FormContainer = styled.div`\r\n  border: 2px black solid;\r\n  text-align: center;\r\n  max-width: 21rem;\r\n  margin: 2rem auto;\r\n  padding: 0px 0rem 2rem;\r\n  box-shadow: 12px 9px black;\r\n`;\r\n\r\nexport const InputField = styled.input`\r\n  width: 13rem;\r\n  border-color: black;\r\n  height: 2rem;\r\n  font-size: 1rem;\r\n  padding: 0.5rem;\r\n  margin: 1rem 0rem;\r\n`;\r\n\r\nexport const QR = styled.img`\r\n  margin: auto;\r\n  width: 50%;\r\n  max-width: 21rem;\r\n  display: block;\r\n  box-shadow: 12px 18px black;\r\n`;\r\n","import React, {\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState\r\n} from \"react\";\r\nimport web3 from \"web3\";\r\nimport { Web3Context } from \"./Web3Context\";\r\nimport { isOwned } from \"./constants\";\r\nimport * as THREE from \"three\";\r\nimport {\r\n  AdminTag,\r\n  Button,\r\n  Bottom,\r\n  Owner,\r\n  Owntainer,\r\n  FetchStatus,\r\n  Loadtainer,\r\n  Logtainer,\r\n  LogtainerTitle\r\n} from \"./styles\";\r\nimport { DeviceContext } from \"./DeviceContext\";\r\n\r\nfunction App() {\r\n  const { checkOwner, claimQR, state } = useContext(Web3Context);\r\n  const { setAdmin } = useContext(DeviceContext);\r\n  const qr = window.location.search\r\n    ? window.location.search.split(\"?\")[1].split(\"-\")\r\n    : [1, \"null_object\"];\r\n  console.log(qr);\r\n  const thereIsQR = qr[0] !== \"\" ? true : false;\r\n  const color = useRef();\r\n  const three = useRef();\r\n  useEffect(() => {\r\n    if (!state.tributes.tributes) return;\r\n    color.current = state.tributes.tributes.color;\r\n  }, [state.tributes]);\r\n  const getColor = () => color.current;\r\n  useEffect(() => {\r\n    console.log(thereIsQR);\r\n    if (thereIsQR) checkOwner(web3.utils.keccak256(qr[1]));\r\n    return () => {};\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!thereIsQR) return;\r\n    if (!state.tributes.tributes) return;\r\n    const scene = new THREE.Scene();\r\n    console.log(\"THREE\");\r\n    const halfHeight = window.innerHeight / 2;\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      (window.innerWidth * 0.8) / halfHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\r\n    renderer.setSize(window.innerWidth * 0.8, halfHeight);\r\n    renderer.setClearColor(0xffffff, 0);\r\n    console.log(three.current);\r\n    three.current.appendChild(renderer.domElement);\r\n\r\n    const { shape } = state.tributes.tributes;\r\n    let geometry;\r\n    if (shape === \"sphere\") {\r\n      geometry = new THREE.SphereGeometry(1, 32, 32);\r\n    } else if (shape === \"cube\") {\r\n      geometry = new THREE.BoxGeometry(1, 1, 1);\r\n    } else if (shape === \"torus\") {\r\n      geometry = new THREE.TorusGeometry(1, 0.1, 16, 100);\r\n    } else {\r\n      geometry = new THREE.TorusKnotGeometry(1, 0.3, 20, 16);\r\n    }\r\n    const material = new THREE.MeshPhongMaterial({\r\n      color: \"red\",\r\n      emissive: 0x2a0000,\r\n\r\n      shininess: 10,\r\n      specular: 0xffffff\r\n    });\r\n\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    scene.add(cube);\r\n    var spotLight = new THREE.SpotLight(0xffffff);\r\n    spotLight.position.set(1.25, 1.25, 1.25);\r\n    scene.add(spotLight);\r\n\r\n    var light = new THREE.AmbientLight(0x404040, 4); // soft white light\r\n    scene.add(light);\r\n    let req;\r\n    camera.position.z = 5;\r\n    function animate() {\r\n      req = requestAnimationFrame(animate);\r\n      material.color = new THREE.Color(getColor());\r\n      cube.rotation.x += 0.01;\r\n      cube.rotation.y += 0.01;\r\n\r\n      renderer.render(scene, camera);\r\n    }\r\n    animate();\r\n\r\n    return () => {\r\n      document.querySelector(\"canvas\").remove();\r\n      window.cancelAnimationFrame(req);\r\n    };\r\n  }, [state.tributes]);\r\n  const {\r\n    ownership: { owner },\r\n    fetcher: { status, response },\r\n    log,\r\n    tributes\r\n  } = state;\r\n  if (!thereIsQR) return <div>nothing to see here</div>;\r\n  return (\r\n    <div>\r\n      <div style={{ position: \"sticky\", top: \"10rem\" }}>\r\n        <AdminTag onClick={() => setAdmin(true)}>admin?</AdminTag>\r\n      </div>\r\n      <FetchStatus>{status}</FetchStatus>\r\n      {!tributes.tributes && <Loadtainer>LOADING</Loadtainer>}\r\n      <div id=\"three\" ref={three}></div>\r\n      <Bottom>\r\n        {isOwned(owner) ? (\r\n          <Owntainer style={{ textAlign: \"center\", fontSize: \"1.4rem\" }}>\r\n            <div>claimed by:</div> <Owner>{owner}</Owner>\r\n          </Owntainer>\r\n        ) : (\r\n          <Owntainer>\r\n            <div\r\n              style={{\r\n                textDecoration: \"underline\",\r\n                lineHeight: \"3rem\"\r\n              }}\r\n            >\r\n              hello friend!\r\n            </div>\r\n            {status !== \"FETCHING\" ? (\r\n              <div>\r\n                <div>would you like to claim this meowbject?</div>\r\n                <Button onClick={() => claimQR(qr)}>claim</Button>\r\n              </div>\r\n            ) : (\r\n              <div>CLAIMING...</div>\r\n            )}\r\n            {status === \"ERROR\" && (\r\n              <div style={{ padding: \"2rem\", color: \"red\" }}>{response}</div>\r\n            )}\r\n          </Owntainer>\r\n        )}\r\n        <Logtainer>\r\n          <LogtainerTitle>DEV_LOG</LogtainerTitle>\r\n          {log.map((l, i) => (\r\n            <div\r\n              key={l + i}\r\n              style={{\r\n                borderBottom: \"1px white solid\",\r\n                padding: \"1rem 0rem 1rem 0rem\",\r\n                overflowWrap: \"break-word\"\r\n              }}\r\n            >\r\n              {l}\r\n            </div>\r\n          ))}\r\n        </Logtainer>\r\n      </Bottom>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AdminTag, FormContainer, InputField, Button, QR } from \"./styles\";\r\nimport { DeviceContext } from \"./DeviceContext\";\r\nimport { Web3Context } from \"./Web3Context\";\r\nimport QRCode from \"qrcode\";\r\nimport felix from \"./felix.png\";\r\n\r\nconst host =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:3000\"\r\n    : \"https://meowbjects.com\";\r\n\r\nconst Admin = () => {\r\n  const { setAdmin } = useContext(DeviceContext);\r\n  const { addQR, state } = useContext(Web3Context);\r\n  const name = useRef();\r\n  const shape = useRef();\r\n  const color = useRef();\r\n\r\n  const [qr, setQR] = useState();\r\n\r\n  const sendQR = () => {\r\n    const { value: nvalue } = name.current;\r\n    const { value: svalue } = shape.current;\r\n    const { value: cvalue } = color.current;\r\n    addQR(nvalue, svalue, cvalue);\r\n  };\r\n  const makeQR = async text => {\r\n    var opts = {\r\n      errorCorrectionLevel: \"H\",\r\n      type: \"image/jpeg\",\r\n      color: { light: \"#ff4500\" },\r\n      width: 400,\r\n      rendererOpts: {\r\n        quality: 1\r\n      }\r\n    };\r\n    const qr = await QRCode.toDataURL(text, opts);\r\n    setQR(qr);\r\n    return qr;\r\n  };\r\n\r\n  const drawQR = async () => {\r\n    console.log(\"drawing qr\");\r\n    const qr = await makeQR(`${host}/?${state.qr}`);\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const qrImg = new Image();\r\n    const feliximg = new Image();\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    qrImg.src = qr;\r\n    qrImg.onload = () => ctx.drawImage(qrImg, 0, 0, 500, 500);\r\n\r\n    feliximg.src = felix;\r\n    feliximg.onload = function() {\r\n      console.log(\"hi\");\r\n      ctx.drawImage(feliximg, 200, 200, 100, 100);\r\n    };\r\n  };\r\n  useEffect(() => {\r\n    if (!state.qr) {\r\n      setQR(null);\r\n      return;\r\n    }\r\n    drawQR();\r\n  }, [state.qr]);\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <div style={{ position: \"sticky\", top: \"10rem\" }}>\r\n        <AdminTag onClick={() => setAdmin(false)}>no admin?</AdminTag>\r\n      </div>\r\n      <FormContainer style={{ textAlign: \"center\" }}>\r\n        <h1>add one</h1>\r\n        <InputField ref={name} placeholder=\"name\" />\r\n        <InputField ref={shape} placeholder=\"shape\" />\r\n        <InputField ref={color} placeholder=\"color\" />\r\n        <Button onClick={sendQR} disabled={state.fetcher.status === \"FETCHING\"}>\r\n          {state.fetcher.status === \"FETCHING\" ? \"ADDING\" : \"CLICKY\"}\r\n        </Button>\r\n      </FormContainer>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        {state.fetcher.status} - {JSON.stringify(state.fetcher.response)}\r\n      </div>\r\n      <canvas\r\n        id=\"canvas\"\r\n        width={\"500px\"}\r\n        height=\"500px\"\r\n        style={{ maxWidth: \"21rem\", maxHeight: \"21rem\" }}\r\n      ></canvas>\r\n      <a\r\n        style={{\r\n          textAlign: \"center\",\r\n          margin: \"auto\",\r\n          display: \"block\",\r\n          fontSize: \"30px\",\r\n          textDecoration: \"none\",\r\n          color: \"red\"\r\n        }}\r\n        href={`${host}/?${state.qr}`}\r\n      >\r\n        {state.fetcher.status === \"FETCHING\" ? \"ADDING...\" : \"CLICKY\"}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport Admin from \"./Admin\";\r\nimport App from \"./App\";\r\nimport { DeviceContext } from \"./DeviceContext\";\r\n\r\nconst Chooser = () => {\r\n  const { admin } = useContext(DeviceContext);\r\n  return <Fragment>{admin ? <Admin /> : <App />}</Fragment>;\r\n};\r\n\r\nexport default Chooser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport DeviceProvider from \"./DeviceContext\";\r\nimport Web3Provider from \"./Web3Context\";\r\nimport Chooser from \"./Chooser\";\r\n\r\nReactDOM.render(\r\n  <DeviceProvider>\r\n    <Web3Provider>\r\n      <Chooser />\r\n    </Web3Provider>\r\n  </DeviceProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}